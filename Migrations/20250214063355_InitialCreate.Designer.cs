// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SymptomApi.Data;

#nullable disable

namespace SymptomApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250214063355_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SymptomApi.Models.ColdSyndromeInsert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommonCold")
                        .HasColumnType("int");

                    b.Property<int>("Fever")
                        .HasColumnType("int");

                    b.Property<int>("Head")
                        .HasColumnType("int");

                    b.Property<int>("Neck")
                        .HasColumnType("int");

                    b.Property<int>("Nose")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("VstDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("ColdSyndromeInsert");
                });

            modelBuilder.Entity("SymptomApi.Models.Syndrome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChiefComplain")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PresentIllness")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Syndrome");
                });

            modelBuilder.Entity("SymptomApi.Models.SyndromeInsert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Dx")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SyndromeInsert");
                });
#pragma warning restore 612, 618
        }
    }
}
